# SPDX-FileCopyrightText: 2024 DIGIS Project Group
#
# SPDX-License-Identifier: CC0-1.0

basePath: /api/v1
definitions:
  model.Author:
    properties:
      firstName:
        description: nullable
        type: string
      lastName:
        description: nullable
        type: string
      order:
        description: nullable
        type: integer
      personID:
        type: integer
    type: object
  model.Batch:
    properties:
      batchID:
        description: nullable
        type: integer
      batchName:
        description: nullable
        type: string
      crystal:
        description: nullable
        type: string
      hostMinerals:
        items:
          $ref: '#/definitions/model.FullDataTaxonomicClassifier'
        type: array
      inclusionMinerals:
        items:
          $ref: '#/definitions/model.FullDataTaxonomicClassifier'
        type: array
      inclusionTypes:
        items:
          type: string
        type: array
      material:
        description: nullable
        type: string
      minerals:
        items:
          $ref: '#/definitions/model.FullDataTaxonomicClassifier'
        type: array
      results:
        items:
          $ref: '#/definitions/model.Result'
        type: array
      rimOrCoreInclusion:
        description: nullable
        type: string
      rimOrCoreMineral:
        description: nullable
        type: string
      sampleID:
        description: nullable
        type: integer
      specimenMedium:
        description: nullable
        type: string
      tasData:
        $ref: '#/definitions/model.DiagramData'
        description: nullable
    type: object
  model.Citation:
    properties:
      authors:
        items:
          $ref: '#/definitions/model.Author'
        type: array
      bookTitle:
        description: nullable
        type: string
      citationID:
        type: integer
      citationLink:
        description: nullable
        type: string
      editors:
        description: nullable
        type: string
      externalIdentifier:
        description: nullable
        type: string
      firstPage:
        description: nullable
        type: string
      issue:
        description: nullable
        type: string
      journal:
        description: nullable
        type: string
      lastPage:
        description: nullable
        type: string
      publicationYear:
        description: nullable
        type: integer
      publisher:
        description: nullable
        type: string
      title:
        description: nullable
        type: string
      volume:
        description: nullable
        type: string
    type: object
  model.CitationResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Citation'
        type: array
      numItems:
        type: integer
    type: object
  model.ClusterResponse:
    properties:
      bbox:
        $ref: '#/definitions/model.GeoJSONFeature'
      clusters:
        items:
          $ref: '#/definitions/model.GeoJSONCluster'
        type: array
      points:
        items:
          $ref: '#/definitions/model.GeoJSONFeature'
        type: array
    type: object
  model.DiagramData:
    properties:
      values:
        items:
          items:
            type: number
          type: array
        type: array
      xAxisLabel:
        type: string
      yAxisLabel:
        type: string
    type: object
  model.Element:
    properties:
      label:
        type: string
      unit:
        type: string
      value:
        type: string
    type: object
  model.ElementResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Element'
        type: array
      numItems:
        type: integer
    type: object
  model.ElementType:
    properties:
      label:
        type: string
      value:
        type: string
    type: object
  model.ElementTypeResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.ElementType'
        type: array
      numItems:
        type: integer
    type: object
  model.FullData:
    properties:
      ageMax:
        description: nullable
        type: number
      ageMin:
        description: nullable
        type: number
      alteration:
        description: nullable
        type: string
      alterationType:
        description: nullable
        type: string
      batchData:
        items:
          $ref: '#/definitions/model.Batch'
        type: array
      comments:
        items:
          type: string
        type: array
      drillDepthMax:
        description: nullable
        type: string
      drillDepthMin:
        description: nullable
        type: string
      elevationMax:
        description: nullable
        type: string
      elevationMin:
        description: nullable
        type: string
      eruptionDate:
        description: nullable
        type: string
      geologicalAge:
        description: nullable
        type: string
      geologicalAgePrefix:
        description: nullable
        type: string
      institutions:
        items:
          type: string
        type: array
      landOrSea:
        description: nullable
        type: string
      latitude:
        description: nullable
        type: number
      latitudeMax:
        description: nullable
        type: string
      latitudeMin:
        description: nullable
        type: string
      locationComments:
        items:
          type: string
        type: array
      locationNames:
        items:
          type: string
        type: array
      locationNum:
        description: nullable
        type: integer
      locationTypes:
        items:
          type: string
        type: array
      longitude:
        description: nullable
        type: number
      longitudeMax:
        description: nullable
        type: string
      longitudeMin:
        description: nullable
        type: string
      methods:
        items:
          type: string
        type: array
      references:
        items:
          $ref: '#/definitions/model.Citation'
        type: array
      results:
        items:
          $ref: '#/definitions/model.Result'
        type: array
      rockClasses:
        items:
          $ref: '#/definitions/model.FullDataTaxonomicClassifier'
        type: array
      rockTextures:
        items:
          type: string
        type: array
      rockTypes:
        items:
          $ref: '#/definitions/model.FullDataTaxonomicClassifier'
        type: array
      sampleID:
        type: integer
      sampleName:
        description: nullable
        type: string
      samplingTechnique:
        description: nullable
        type: string
      tectonicSetting:
        description: nullable
        type: string
      uniqueID:
        description: nullable
        type: string
    type: object
  model.FullDataResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.FullData'
        type: array
      numItems:
        type: integer
    type: object
  model.FullDataTaxonomicClassifier:
    properties:
      id:
        type: integer
      label:
        type: string
      value:
        type: string
    type: object
  model.GeoAge:
    properties:
      name:
        type: string
    type: object
  model.GeoAgePrefix:
    properties:
      name:
        type: string
    type: object
  model.GeoAgePrefixResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.GeoAgePrefix'
        type: array
      numItems:
        type: integer
    type: object
  model.GeoAgeResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.GeoAge'
        type: array
      numItems:
        type: integer
    type: object
  model.GeoJSONCluster:
    properties:
      centroid:
        $ref: '#/definitions/model.GeoJSONFeature'
      clusterID:
        type: integer
      convexHull:
        $ref: '#/definitions/model.GeoJSONFeature'
    type: object
  model.GeoJSONFeature:
    properties:
      geometry:
        $ref: '#/definitions/model.Geometry'
      id:
        type: string
      properties:
        additionalProperties: true
        type: object
      type:
        type: string
    type: object
  model.GeoJSONFeatureCollection:
    properties:
      features:
        items:
          $ref: '#/definitions/model.GeoJSONFeature'
        type: array
      numberMatched:
        type: integer
      numberReturned:
        type: integer
      type:
        type: string
    type: object
  model.GeologicalSetting:
    properties:
      setting:
        type: string
    type: object
  model.GeologicalSettingResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.GeologicalSetting'
        type: array
      numItems:
        type: integer
    type: object
  model.Geometry:
    properties:
      coordinates:
        items: {}
        type: array
      type:
        type: string
    type: object
  model.InclusionType:
    properties:
      name:
        type: string
    type: object
  model.InclusionTypeResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.InclusionType'
        type: array
      numItems:
        type: integer
    type: object
  model.Location:
    properties:
      name:
        type: string
    type: object
  model.LocationResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Location'
        type: array
      numItems:
        type: integer
    type: object
  model.Material:
    properties:
      name:
        type: string
    type: object
  model.MaterialResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Material'
        type: array
      numItems:
        type: integer
    type: object
  model.Measurement:
    properties:
      element:
        type: string
      unit:
        type: string
      value:
        type: number
    type: object
  model.Organization:
    properties:
      name:
        type: string
    type: object
  model.OrganizationResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Organization'
        type: array
      numItems:
        type: integer
    type: object
  model.PeopleResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Person'
        type: array
      numItems:
        type: integer
    type: object
  model.Person:
    properties:
      personFirstName:
        description: nullable
        type: string
      personID:
        type: integer
      personLastName:
        description: nullable
        type: string
    type: object
  model.Result:
    properties:
      itemGroup:
        description: nullable
        type: string
      itemName:
        description: nullable
        type: string
      medium:
        description: nullable
        type: string
      method:
        description: nullable
        type: string
      standards:
        items:
          $ref: '#/definitions/model.Standard'
        type: array
      unit:
        description: nullable
        type: string
      value:
        description: nullable
        type: number
      valueCount:
        description: nullable
        type: integer
    type: object
  model.Sample:
    properties:
      elevationDatumCV:
        description: nullable
        type: string
      elevationM:
        description: nullable
        type: number
      elevationPrecision:
        description: nullable
        type: number
      elevationPrecisionComment:
        description: nullable
        type: string
      featureGeometryWKT:
        description: nullable
        type: string
      samplingFeatureDescription:
        description: nullable
        type: string
      samplingFeatureGeoTypeCV:
        description: nullable
        type: string
      samplingFeatureID:
        type: integer
      samplingFeatureName:
        description: nullable
        type: string
      samplingFeatureUUID:
        description: nullable
        type: string
    type: object
  model.SampleAuthor:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      order:
        type: integer
    type: object
  model.SampleByFilterResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.SampleByFiltersData'
        type: array
      numItems:
        type: integer
      totalCount:
        type: integer
    type: object
  model.SampleByFiltersData:
    properties:
      authors:
        items:
          $ref: '#/definitions/model.SampleAuthor'
        type: array
      batches:
        items:
          type: integer
        type: array
      externalIdentifier:
        description: nullable
        type: string
      geologicalAges:
        items:
          type: string
        type: array
      geologicalAgesMax:
        items:
          type: string
        type: array
      geologicalAgesMin:
        items:
          type: string
        type: array
      geologicalSettings:
        items:
          type: string
        type: array
      hostMinerals:
        description: only filled for material="Inclusion"
        items:
          type: string
        type: array
      inclusionMinerals:
        description: only filled for material="Inclusion"
        items:
          type: string
        type: array
      inclusionTypes:
        description: only filled for material="Inclusion"
        items:
          type: string
        type: array
      latitude:
        type: number
      longitude:
        type: number
      minerals:
        description: only filled for material="Mineral"
        items:
          type: string
        type: array
      publicationYear:
        description: nullable
        type: integer
      rockClasses:
        description: only filled for material="WholeRock or Glass"
        items:
          type: string
        type: array
      rockTypes:
        items:
          type: string
        type: array
      sampleID:
        type: integer
      sampleName:
        type: string
      selectedMeasurements:
        items:
          $ref: '#/definitions/model.Measurement'
        type: array
    type: object
  model.SamplingTechnique:
    properties:
      name:
        type: string
    type: object
  model.SamplingTechniqueResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.SamplingTechnique'
        type: array
      numItems:
        type: integer
    type: object
  model.Site:
    properties:
      latitude:
        type: number
      locationPrecision:
        type: number
      locationPrecisionComment:
        type: string
      longitude:
        type: number
      samplingFeatureID:
        type: integer
      setting:
        type: string
      siteDescription:
        type: string
      siteTypeCV:
        type: string
      spatialReferenceID:
        type: integer
    type: object
  model.SiteResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Site'
        type: array
      numItems:
        type: integer
    type: object
  model.Specimen:
    properties:
      isFieldSpecimen:
        type: boolean
      samplingFeatureID:
        type: integer
      specimenMediumCV:
        type: string
      specimenTypeCV:
        type: string
    type: object
  model.SpecimenResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Specimen'
        type: array
      numItems:
        type: integer
    type: object
  model.SpecimenType:
    properties:
      specimentypecv:
        type: string
    type: object
  model.SpecimenTypeResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.SpecimenType'
        type: array
      numItems:
        type: integer
    type: object
  model.Standard:
    properties:
      standardName:
        type: string
      standardUnit:
        type: string
      standardValue:
        type: number
      standardVariable:
        type: string
    type: object
  model.Statistics:
    properties:
      latestDate:
        type: string
      numAnalyses:
        type: integer
      numCitations:
        type: integer
      numResults:
        type: integer
      numSamples:
        type: integer
    type: object
  model.TaxonomicClassifier:
    properties:
      count:
        type: integer
      label:
        type: string
      value:
        type: string
    type: object
  model.TaxonomicClassifierResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.TaxonomicClassifier'
        type: array
      numItems:
        type: integer
    type: object
host: api-test.georoc.eu
info:
  contact:
    email: digis-info@uni-goettingen.de
    name: DIGIS Project
    url: https://www.uni-goettingen.de/de/643369.html
  description: |-
    This is the database api for the new GeoROC datamodel

    Note: Semicolon (;) in queries are not allowed and need to be url-encoded as per this issue: golang.org/issue/25192
  license:
    name: Data retrieved is licensed under CC BY-SA 4.0
    url: https://creativecommons.org/licenses/by-sa/4.0/
  title: DIGIS Database API
  version: 0.7.1
paths:
  /alive:
    get:
      consumes:
      - application/json
      description: Check connection to api
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Health request to check if api is responsive
      tags:
      - general
  /download/filtered:
    get:
      consumes:
      - application/json
      description: |-
        get the full data for the given filters as a csv or xlsx file
        Filter DSL syntax:
        FIELD=OPERATOR:VALUE
        where FIELD is one of the accepted query params; OPERATOR is one of "lt" (<), "gt" (>), "eq" (=), "in" (IN), "lk" (LIKE), "btw" (BETWEEN)
        and VALUE is an unquoted string, integer or decimal
        Multiple VALUEs for an "in"-filter must be comma-separated and will be interpreted as a discunctive filter.
        The OPERATORs "lt", "gt" and "btw" are only applicable to numerical values.
        The OPERATOR "lk" is only applicable to string values and supports wildcards `*`(0 or more chars) and `?`(one char).
        The OPERATOR "btw" accepts two comma-separated values as the inclusive lower and upper bound. Missing values are assumed as 0 and 9999999 respectively.
        If no OPERATOR is specified, "eq" is assumed as the default OPERATOR.
        The filters are evaluated conjunctively.
        Note that applying more filters can slow down the query as more tables have to be considered in the evaluation.
      parameters:
      - description: 'Desired output format: csv (default) or xlsx'
        in: query
        name: format
        required: true
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: tectonic setting - see /queries/sites/settings (supports Filter
          DSL)
        in: query
        name: setting
        type: string
      - description: location level 1 - see /queries/locations/l1 (supports Filter
          DSL)
        in: query
        name: location1
        type: string
      - description: location level 2 - see /queries/locations/l2 (supports Filter
          DSL)
        in: query
        name: location2
        type: string
      - description: location level 3 - see /queries/locations/l3 (supports Filter
          DSL)
        in: query
        name: location3
        type: string
      - description: latitude (supports Filter DSL)
        in: query
        name: latitude
        type: string
      - description: longitude (supports Filter DSL)
        in: query
        name: longitude
        type: string
      - description: rock type - see /queries/samples/rocktypes (supports Filter DSL)
        in: query
        name: rocktype
        type: string
      - description: taxonomic classifier ID - see /queries/samples/rockclasses value
          (supports Filter DSL)
        in: query
        name: rockclassID
        type: integer
      - description: mineral - see /queries/samples/minerals (supports Filter DSL)
        in: query
        name: mineral
        type: string
      - description: material - see /queries/samples/materials (supports Filter DSL)
        in: query
        name: material
        type: string
      - description: inclusion type - see /queries/samples/inclusiontypes (supports
          Filter DSL)
        in: query
        name: inclusiontype
        type: string
      - description: host material - see /queries/samples/hostmaterials (supports
          Filter DSL)
        in: query
        name: hostmaterial
        type: string
      - description: inclusion material - see /queries/samples/inclusionmaterials
          (supports Filter DSL)
        in: query
        name: inclusionmaterial
        type: string
      - description: sampling technique - see /queries/samples/samplingtechniques
          (supports Filter DSL)
        in: query
        name: sampletech
        type: string
      - description: rim or core - R = Rim, C = Core, I = Intermediate (supports Filter
          DSL)
        in: query
        name: rimorcore
        type: string
      - description: chemical filter using the form `(TYPE,ELEMENT,MIN,MAX),...` where
          the filter tuples are evaluated conjunctively
        in: query
        name: chemistry
        type: string
      - description: title of publication (supports Filter DSL)
        in: query
        name: title
        type: string
      - description: publication year (supports Filter DSL)
        in: query
        name: publicationyear
        type: string
      - description: DOI (supports Filter DSL)
        in: query
        name: doi
        type: string
      - description: Author first name (supports Filter DSL)
        in: query
        name: firstname
        type: string
      - description: Author last name (supports Filter DSL)
        in: query
        name: lastname
        type: string
      - description: Specimen age min (supports Filter DSL)
        in: query
        name: agemin
        type: string
      - description: Specimen age max (supports Filter DSL)
        in: query
        name: agemax
        type: string
      - description: Specimen geological age - see /queries/samples/geoages (supports
          Filter DSL)
        in: query
        name: geoage
        type: string
      - description: Specimen geological age prefix - see /queries/samples/geoageprefixes
          (supports Filter DSL)
        in: query
        name: geoageprefix
        type: string
      - description: Laboratory name - see /queries/samples/organizationnames (supports
          Filter DSL)
        in: query
        name: lab
        type: string
      - description: 'Coordinate-Polygon formatted as 2-dimensional json array: [[LONG,LAT],[2.4,6.3]]'
        in: query
        name: polygon
        type: string
      - description: Add coordinates to each sample
        in: query
        name: addcoordinates
        type: boolean
      produces:
      - text/plain
      responses:
        "102":
          description: Processing
          schema:
            type: header
        "200":
          description: OK
          schema:
            type: file
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve download data for the given filters
      tags:
      - download
  /download/sampleid:
    get:
      consumes:
      - application/json
      description: get the full data for a list of sample IDs as a csv or xlsx file
      parameters:
      - description: List of Sample identifiers
        in: query
        name: sampleids
        required: true
        type: string
      - description: 'Desired output format: csv (default) or xlsx'
        in: query
        name: format
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "102":
          description: Processing
          schema:
            type: header
        "200":
          description: OK
          schema:
            type: file
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve download data for the given sample IDs
      tags:
      - download
  /geodata/samplesclustered:
    get:
      consumes:
      - application/json
      description: |-
        Get all samplingfeatureIDs matching the current filters clustered
        Filter DSL syntax:
        FIELD=OPERATOR:VALUE
        where FIELD is one of the accepted query params; OPERATOR is one of "lt" (<), "gt" (>), "eq" (=), "in" (IN), "lk" (LIKE), "btw" (BETWEEN)
        and VALUE is an unquoted string, integer or decimal
        Multiple VALUEs for an "in"-filter must be comma-separated and will be interpreted as a discunctive filter.
        The OPERATORs "lt", "gt" and "btw" are only applicable to numerical values.
        The OPERATOR "lk" is only applicable to string values and supports wildcards `*`(0 or more chars) and `?`(one char).
        The OPERATOR "btw" accepts two comma-separated values as the inclusive lower and upper bound. Missing values are assumed as 0 and 9999999 respectively.
        If no OPERATOR is specified, "eq" is assumed as the default OPERATOR.
        The filters are evaluated conjunctively.
        Note that applying more filters can slow down the query as more tables have to be considered in the evaluation.
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: tectonic setting - see /queries/sites/settings (supports Filter
          DSL)
        in: query
        name: setting
        type: string
      - description: location level 1 - see /queries/locations/l1 (supports Filter
          DSL)
        in: query
        name: location1
        type: string
      - description: location level 2 - see /queries/locations/l2 (supports Filter
          DSL)
        in: query
        name: location2
        type: string
      - description: location level 3 - see /queries/locations/l3 (supports Filter
          DSL)
        in: query
        name: location3
        type: string
      - description: latitude (supports Filter DSL)
        in: query
        name: latitude
        type: string
      - description: longitude (supports Filter DSL)
        in: query
        name: longitude
        type: string
      - description: rock type - see /queries/samples/rocktypes (supports 'eq', 'in')
        in: query
        name: rocktype
        type: string
      - description: taxonomic classifier ID - see /queries/samples/rockclasses value
          (supports 'eq', 'in')
        in: query
        name: rockclassID
        type: integer
      - description: mineral - see /queries/samples/minerals (supports 'eq', 'in')
        in: query
        name: mineral
        type: string
      - description: material - see /queries/samples/materials (supports Filter DSL)
        in: query
        name: material
        type: string
      - description: inclusion type - see /queries/samples/inclusiontypes (supports
          Filter DSL)
        in: query
        name: inclusiontype
        type: string
      - description: host mineral - see /queries/samples/hostmaterials (supports 'eq',
          'in')
        in: query
        name: hostmineral
        type: string
      - description: inclusion mineral - see /queries/samples/inclusionmaterials (supports
          'eq', 'in')
        in: query
        name: inclusionmineral
        type: string
      - description: sampling technique - see /queries/samples/samplingtechniques
          (supports Filter DSL)
        in: query
        name: sampletech
        type: string
      - description: rim or core - R = Rim, C = Core, I = Intermediate (supports Filter
          DSL)
        in: query
        name: rimorcore
        type: string
      - description: chemical filter using the form `(TYPE,ELEMENT,MIN,MAX),...` where
          the filter tuples are evaluated conjunctively
        in: query
        name: chemistry
        type: string
      - description: title of publication (supports Filter DSL)
        in: query
        name: title
        type: string
      - description: publication year (supports Filter DSL)
        in: query
        name: publicationyear
        type: string
      - description: DOI (supports Filter DSL)
        in: query
        name: doi
        type: string
      - description: Author first name (supports 'eq', 'in')
        in: query
        name: firstname
        type: string
      - description: Author last name (supports 'eq', 'in')
        in: query
        name: lastname
        type: string
      - description: Specimen age min (supports Filter DSL)
        in: query
        name: agemin
        type: string
      - description: Specimen age max (supports Filter DSL)
        in: query
        name: agemax
        type: string
      - description: Specimen geological age - see /queries/samples/geoages (supports
          Filter DSL)
        in: query
        name: geoage
        type: string
      - description: Specimen geological age prefix - see /queries/samples/geoageprefixes
          (supports Filter DSL)
        in: query
        name: geoageprefix
        type: string
      - description: Laboratory name - see /queries/samples/organizationnames (supports
          Filter DSL)
        in: query
        name: lab
        type: string
      - description: 'Coordinate-Polygon formatted as 2-dimensional json array: [[LONG,LAT],[2.4,6.3]]'
        in: query
        name: polygon
        type: string
      - description: 'BoundingBox formatted as 2-dimensional json array: [[SW_Long,SW_Lat],[SE_Long,SE_Lat],[NE_Long,NE_Lat],[NW_Long,NW_Lat]]'
        in: query
        name: bbox
        required: true
        type: string
      - description: Number of clusters for k-means clustering. Default is 7. Can
          be more depending on maxDistance
        in: query
        name: numClusters
        type: integer
      - description: 'Max size of cluster. Recommended values per zoom-level: Z0:
          50, Z1: 50, Z2: 25, Z4: 12 -> Zi = 50/i'
        in: query
        name: maxDistance
        type: integer
      produces:
      - application/json
      responses:
        "102":
          description: Processing
          schema:
            type: header
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ClusterResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve all samplingfeatureIDs filtered by a variety of fields and
        clustered
      tags:
      - geodata
  /geodata/sites:
    get:
      consumes:
      - application/json
      description: get site data in GeoJSON format
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GeoJSONFeatureCollection'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve site data as GeoJSON
      tags:
      - geodata
  /ping:
    get:
      consumes:
      - application/json
      description: Check connection to db
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "424":
          description: Failed Dependency
          schema:
            type: string
      summary: Health request to check db connection
      tags:
      - general
  /queries/authors:
    get:
      consumes:
      - application/json
      description: get authors
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PeopleResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve authors
      tags:
      - people
  /queries/authors/{personID}:
    get:
      consumes:
      - application/json
      description: get authors by personID
      parameters:
      - description: Person ID
        in: path
        name: personID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Person'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve authors by personID
      tags:
      - people
  /queries/citations:
    get:
      consumes:
      - application/json
      description: get citations
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CitationResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve citations
      tags:
      - citations
  /queries/citations/{citationID}:
    get:
      consumes:
      - application/json
      description: get citations by citationID
      parameters:
      - description: Citation ID
        in: path
        name: citationID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Citation'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve citations by citationID
      tags:
      - citations
  /queries/fulldata:
    get:
      consumes:
      - application/json
      description: get full datasets by a list of samplingfeatureids
      parameters:
      - description: List of Samplingfeature identifiers
        in: query
        name: samplingfeatureids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.FullDataResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve full datasets by a list of samplingfeatureids
      tags:
      - fulldata
  /queries/fulldata/{samplingfeatureid}:
    get:
      consumes:
      - application/json
      description: get full dataset by samplingfeatureid
      parameters:
      - description: Samplingfeature identifier
        in: path
        name: samplingfeatureids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.FullData'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve full dataset by samplingfeatureid
      tags:
      - fulldata
  /queries/locations/l1:
    get:
      consumes:
      - application/json
      description: get top level locations
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LocationResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve locations of first level
      tags:
      - locations
  /queries/locations/l2:
    get:
      consumes:
      - application/json
      description: get second level locations
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: Locationname Level 1
        in: query
        name: locationl1
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LocationResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve locations of second level
      tags:
      - locations
  /queries/locations/l3:
    get:
      consumes:
      - application/json
      description: get third level locations
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: Locationname Level 1
        in: query
        name: locationl1
        required: true
        type: string
      - description: Locationname Level 2
        in: query
        name: locationl2
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LocationResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve locations of third level
      tags:
      - locations
  /queries/results/elements:
    get:
      consumes:
      - application/json
      description: get chemical elements
      parameters:
      - description: Element type
        in: query
        name: type
        type: string
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ElementResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve chemical elements
      tags:
      - samples
  /queries/results/elementtypes:
    get:
      consumes:
      - application/json
      description: get chemical element types
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ElementTypeResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve chemical element types
      tags:
      - samples
  /queries/samples:
    get:
      consumes:
      - application/json
      description: |-
        Get all samplingfeatureIDs matching the current filters
        Filter DSL syntax:
        FIELD=OPERATOR:VALUE
        where FIELD is one of the accepted query params; OPERATOR is one of "lt" (<), "gt" (>), "eq" (=), "in" (IN), "lk" (LIKE), "btw" (BETWEEN)
        and VALUE is an unquoted string, integer or decimal
        Multiple VALUEs for an "in"-filter must be comma-separated and will be interpreted as a discunctive filter.
        The OPERATORs "lt", "gt" and "btw" are only applicable to numerical values.
        The OPERATOR "lk" is only applicable to string values and supports wildcards `*`(0 or more chars) and `?`(one char).
        The OPERATOR "btw" accepts two comma-separated values as the inclusive lower and upper bound. Missing values are assumed as 0 and 9999999 respectively.
        If no OPERATOR is specified, "eq" is assumed as the default OPERATOR.
        The filters are evaluated conjunctively.
        Note that applying more filters can slow down the query as more tables have to be considered in the evaluation.
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: tectonic setting - see /queries/sites/settings (supports Filter
          DSL)
        in: query
        name: setting
        type: string
      - description: location level 1 - see /queries/locations/l1 (supports Filter
          DSL)
        in: query
        name: location1
        type: string
      - description: location level 2 - see /queries/locations/l2 (supports Filter
          DSL)
        in: query
        name: location2
        type: string
      - description: location level 3 - see /queries/locations/l3 (supports Filter
          DSL)
        in: query
        name: location3
        type: string
      - description: latitude (supports Filter DSL)
        in: query
        name: latitude
        type: string
      - description: longitude (supports Filter DSL)
        in: query
        name: longitude
        type: string
      - description: rock type - see /queries/samples/rocktypes (supports Filter DSL)
        in: query
        name: rocktype
        type: string
      - description: taxonomic classifier ID - see /queries/samples/rockclasses value
          (supports Filter DSL)
        in: query
        name: rockclassID
        type: integer
      - description: mineral - see /queries/samples/minerals (supports Filter DSL)
        in: query
        name: mineral
        type: string
      - description: material - see /queries/samples/materials (supports Filter DSL)
        in: query
        name: material
        type: string
      - description: inclusion type - see /queries/samples/inclusiontypes (supports
          Filter DSL)
        in: query
        name: inclusiontype
        type: string
      - description: host material - see /queries/samples/hostmaterials (supports
          Filter DSL)
        in: query
        name: hostmaterial
        type: string
      - description: inclusion material - see /queries/samples/inclusionmaterials
          (supports Filter DSL)
        in: query
        name: inclusionmaterial
        type: string
      - description: sampling technique - see /queries/samples/samplingtechniques
          (supports Filter DSL)
        in: query
        name: sampletech
        type: string
      - description: rim or core - R = Rim, C = Core, I = Intermediate (supports Filter
          DSL)
        in: query
        name: rimorcore
        type: string
      - description: chemical filter using the form `(TYPE,ELEMENT,MIN,MAX),...` where
          the filter tuples are evaluated conjunctively
        in: query
        name: chemistry
        type: string
      - description: title of publication (supports Filter DSL)
        in: query
        name: title
        type: string
      - description: publication year (supports Filter DSL)
        in: query
        name: publicationyear
        type: string
      - description: DOI (supports Filter DSL)
        in: query
        name: doi
        type: string
      - description: Author first name (supports Filter DSL)
        in: query
        name: firstname
        type: string
      - description: Author last name (supports Filter DSL)
        in: query
        name: lastname
        type: string
      - description: Specimen age min (supports Filter DSL)
        in: query
        name: agemin
        type: string
      - description: Specimen age max (supports Filter DSL)
        in: query
        name: agemax
        type: string
      - description: Specimen geological age - see /queries/samples/geoages (supports
          Filter DSL)
        in: query
        name: geoage
        type: string
      - description: Specimen geological age prefix - see /queries/samples/geoageprefixes
          (supports Filter DSL)
        in: query
        name: geoageprefix
        type: string
      - description: Laboratory name - see /queries/samples/organizationnames (supports
          Filter DSL)
        in: query
        name: lab
        type: string
      - description: 'Coordinate-Polygon formatted as 2-dimensional json array: [[LONG,LAT],[2.4,6.3]]'
        in: query
        name: polygon
        type: string
      - description: Add coordinates to each sample
        in: query
        name: addcoordinates
        type: boolean
      produces:
      - application/json
      responses:
        "102":
          description: Processing
          schema:
            type: header
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SampleByFilterResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve all samplingfeatureIDs filtered by a variety of fields
      tags:
      - samples
  /queries/samples/{samplingfeatureID}:
    get:
      consumes:
      - application/json
      description: get sample by samplingfeatureid
      parameters:
      - description: Sample ID
        in: path
        name: samplingfeatureID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Sample'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve sample by samplingfeatureid
      tags:
      - samples
  /queries/samples/geoageprefixes:
    get:
      consumes:
      - application/json
      description: get geological age prefixes
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GeoAgePrefixResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve geological age prefixes
      tags:
      - samples
  /queries/samples/geoages:
    get:
      consumes:
      - application/json
      description: get geological ages
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GeoAgeResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve geological ages
      tags:
      - samples
  /queries/samples/hostmaterials:
    get:
      consumes:
      - application/json
      description: get host materials
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaxonomicClassifierResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve host materials
      tags:
      - samples
  /queries/samples/inclusionmaterials:
    get:
      consumes:
      - application/json
      description: get inclusion materials
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaxonomicClassifierResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve inclusion materials
      tags:
      - samples
  /queries/samples/inclusiontypes:
    get:
      consumes:
      - application/json
      description: get inclusion types
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.InclusionTypeResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve inclusion types
      tags:
      - samples
  /queries/samples/materials:
    get:
      consumes:
      - application/json
      description: get materials
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MaterialResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve materials
      tags:
      - samples
  /queries/samples/minerals:
    get:
      consumes:
      - application/json
      description: get minerals
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaxonomicClassifierResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve minerals
      tags:
      - samples
  /queries/samples/organizationnames:
    get:
      consumes:
      - application/json
      description: get organization names
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OrganizationResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve organization names
      tags:
      - samples
  /queries/samples/random:
    get:
      consumes:
      - application/json
      description: get random specimen
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SpecimenResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve a random set of specimen
      tags:
      - samples
  /queries/samples/rockclasses:
    get:
      consumes:
      - application/json
      description: |-
        get rock classes
        Filter DSL syntax:
        FIELD=OPERATOR:VALUE
        where FIELD is one of the accepted query params; OPERATOR is either "in" (IN) for rocktype; or "lk" (LIKE) for the search query q
        and VALUE is an unquoted string
        Multiple VALUEs for an "in"-filter must be comma-separated and will be interpreted as a discunctive filter.
        The OPERATOR "lk" is only applicable to string values and supports wildcards `*`(0 or more chars) and `?`(one char).
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: 'One or more Rocktypes to filter corresponding Rockclasses as
          a comma-separated list. Use '
        in: query
        name: rocktype
        type: string
      - description: 'Search string for rockclass values. Use '
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaxonomicClassifierResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve rock classes
      tags:
      - samples
  /queries/samples/rocktypes:
    get:
      consumes:
      - application/json
      description: get rock types
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaxonomicClassifierResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve rock types
      tags:
      - samples
  /queries/samples/samplingtechniques:
    get:
      consumes:
      - application/json
      description: get sampling techniques
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SamplingTechniqueResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve sampling techniques
      tags:
      - samples
  /queries/samples/specimentypes:
    get:
      consumes:
      - application/json
      description: get specimen types
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SpecimenTypeResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve specimen types
      tags:
      - samples
  /queries/sites:
    get:
      consumes:
      - application/json
      description: Get all sites
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SiteResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve all sites
      tags:
      - sites
  /queries/sites/{samplingfeatureID}:
    get:
      consumes:
      - application/json
      description: Get sites by samplingfeatureID
      parameters:
      - description: samplingfeatureID
        in: path
        name: samplingfeatureID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Site'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve sites by samplingfeatureID
      tags:
      - sites
  /queries/sites/settings:
    get:
      consumes:
      - application/json
      description: Get all geological settings
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GeologicalSettingResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve all geological settings
      tags:
      - sites
  /queries/statistics:
    get:
      consumes:
      - application/json
      description: get statistics
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Statistics'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve data statistics
      tags:
      - stats
  /version:
    get:
      consumes:
      - application/json
      description: Check current version of the api
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get api-version
      tags:
      - general
schemes:
- https
- http
securityDefinitions:
  ApiKeyAuth:
    description: Accesskey based security scheme to secure api groups "/queries/*"
      and "/geodata/*"
    in: header
    name: DIGIS-API-ACCESSKEY
    type: apiKey
swagger: "2.0"
