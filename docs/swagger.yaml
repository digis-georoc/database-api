basePath: /api/v1
definitions:
  model.Citation:
    properties:
      authors:
        items:
          $ref: '#/definitions/model.Person'
        type: array
      bookTitle:
        type: string
      citationID:
        type: integer
      citationLink:
        type: string
      editors:
        type: string
      firstPage:
        type: string
      issue:
        type: string
      journal:
        type: string
      lastPage:
        type: string
      publicationYear:
        type: integer
      publisher:
        type: string
      title:
        type: string
      volume:
        type: string
    type: object
  model.CitationResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Citation'
        type: array
      numItems:
        type: integer
    type: object
  model.ClusterResponse:
    properties:
      bbox:
        $ref: '#/definitions/model.GeoJSONFeature'
      clusters:
        items:
          $ref: '#/definitions/model.GeoJSONCluster'
        type: array
    type: object
  model.Element:
    properties:
      name:
        type: string
    type: object
  model.ElementResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Element'
        type: array
      numItems:
        type: integer
    type: object
  model.ElementType:
    properties:
      name:
        type: string
    type: object
  model.ElementTypeResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.ElementType'
        type: array
      numItems:
        type: integer
    type: object
  model.FullData:
    properties:
      ageMax:
        type: integer
      ageMin:
        type: integer
      batches:
        items:
          type: integer
        type: array
      comment:
        items:
          type: string
        type: array
      elevationMax:
        type: string
      elevationMin:
        type: string
      inclusionTypes:
        items:
          type: string
        type: array
      institutions:
        items:
          type: string
        type: array
      itemGroup:
        items:
          type: string
        type: array
      itemName:
        items:
          type: string
        type: array
      landOrSea:
        type: string
      latitude:
        type: number
      latitudeMax:
        type: string
      latitudeMin:
        type: string
      locationNames:
        items:
          type: string
        type: array
      locationNum:
        type: integer
      locationTypes:
        items:
          type: string
        type: array
      longitude:
        type: number
      longitudeMax:
        type: string
      longitudeMin:
        type: string
      materials:
        items:
          type: string
        type: array
      method:
        items:
          type: string
        type: array
      minerals:
        items:
          type: string
        type: array
      references:
        items: {}
        type: array
      rockClasses:
        items:
          type: string
        type: array
      rockTextures:
        items:
          type: string
        type: array
      rockTypes:
        items:
          type: string
        type: array
      sampleName:
        type: string
      sampleNum:
        type: integer
      standardNames:
        items:
          type: string
        type: array
      standardValues:
        items:
          type: number
        type: array
      tectonicSetting:
        type: string
      uniqueID:
        type: string
      units:
        items:
          type: string
        type: array
      values:
        items:
          type: number
        type: array
    type: object
  model.FullDataResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.FullData'
        type: array
      numItems:
        type: integer
    type: object
  model.GeoAge:
    properties:
      name:
        type: string
    type: object
  model.GeoAgePrefix:
    properties:
      name:
        type: string
    type: object
  model.GeoAgePrefixResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.GeoAgePrefix'
        type: array
      numItems:
        type: integer
    type: object
  model.GeoAgeResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.GeoAge'
        type: array
      numItems:
        type: integer
    type: object
  model.GeoJSONCluster:
    properties:
      centroid:
        $ref: '#/definitions/model.GeoJSONFeature'
      clusterID:
        type: integer
      convexHull:
        $ref: '#/definitions/model.GeoJSONFeature'
    type: object
  model.GeoJSONFeature:
    properties:
      geometry:
        $ref: '#/definitions/model.Geometry'
      id:
        type: string
      properties:
        additionalProperties: true
        type: object
      type:
        type: string
    type: object
  model.GeoJSONFeatureCollection:
    properties:
      features:
        items:
          $ref: '#/definitions/model.GeoJSONFeature'
        type: array
      numberMatched:
        type: integer
      numberReturned:
        type: integer
      type:
        type: string
    type: object
  model.Geometry:
    properties:
      coordinates:
        items: {}
        type: array
      type:
        type: string
    type: object
  model.InclusionType:
    properties:
      name:
        type: string
    type: object
  model.InclusionTypeResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.InclusionType'
        type: array
      numItems:
        type: integer
    type: object
  model.Location:
    properties:
      name:
        type: string
    type: object
  model.LocationResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Location'
        type: array
      numItems:
        type: integer
    type: object
  model.Material:
    properties:
      name:
        type: string
    type: object
  model.MaterialResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Material'
        type: array
      numItems:
        type: integer
    type: object
  model.Organization:
    properties:
      name:
        type: string
    type: object
  model.OrganizationResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Organization'
        type: array
      numItems:
        type: integer
    type: object
  model.PeopleResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Person'
        type: array
      numItems:
        type: integer
    type: object
  model.Person:
    properties:
      personFirstName:
        type: string
      personID:
        type: integer
      personLastName:
        type: string
    type: object
  model.Sample:
    properties:
      elevation_m:
        type: number
      elevationDatumCV:
        type: string
      elevationPrecision:
        type: number
      elevationPrecisionComment:
        type: string
      featureGeometryWKT:
        type: string
      samplingFeatureDescription:
        type: string
      samplingFeatureGeoTypeCV:
        type: string
      samplingFeatureID:
        type: integer
      samplingFeatureName:
        type: string
      samplingFeatureUUID:
        type: string
    type: object
  model.SampleByFilterResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.SampleByFilters'
        type: array
      numItems:
        type: integer
    type: object
  model.SampleByFilters:
    properties:
      latitude:
        type: number
      longitude:
        type: number
      sampleID:
        type: integer
    type: object
  model.SampleResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Sample'
        type: array
      numItems:
        type: integer
    type: object
  model.SamplingTechnique:
    properties:
      name:
        type: string
    type: object
  model.SamplingTechniqueResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.SamplingTechnique'
        type: array
      numItems:
        type: integer
    type: object
  model.Site:
    properties:
      latitude:
        type: number
      locationPrecision:
        type: number
      locationPrecisionComment:
        type: string
      longitude:
        type: number
      samplingFeatureID:
        type: integer
      setting:
        type: string
      siteDescription:
        type: string
      siteTypeCV:
        type: string
      spatialReferenceID:
        type: integer
    type: object
  model.SiteResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Site'
        type: array
      numItems:
        type: integer
    type: object
  model.Specimen:
    properties:
      isFieldSpecimen:
        type: boolean
      samplingFeatureID:
        type: integer
      specimenMediumCV:
        type: string
      specimenTypeCV:
        type: string
    type: object
  model.SpecimenResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.Specimen'
        type: array
      numItems:
        type: integer
    type: object
  model.TaxonomicClassifier:
    properties:
      name:
        type: string
    type: object
  model.TaxonomicClassifierResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/model.TaxonomicClassifier'
        type: array
      numItems:
        type: integer
    type: object
host: api-test.georoc.eu
info:
  contact:
    email: digis-info@uni-goettingen.de
    name: DIGIS Project
    url: https://www.uni-goettingen.de/de/643369.html
  description: |-
    This is the database api for the new GeoROC datamodel

    Note: Semicolon (;) in queries are not allowed and need to be url-encoded as per this issue: golang.org/issue/25192
  license:
    name: Data retrieved is licensed under CC BY-SA 4.0
    url: https://creativecommons.org/licenses/by-sa/4.0/
  title: DIGIS Database API
  version: 0.3.4
paths:
  /geodata/samplesclustered:
    get:
      consumes:
      - application/json
      description: |-
        Get all samplingfeatureIDs matching the current filters clustered
        Filter DSL syntax:
        FIELD=OPERATOR:VALUE
        where FIELD is one of the accepted query params; OPERATOR is one of "lt" (<), "gt" (>), "eq" (=), "in" (IN), "lk" (LIKE), "btw" (BETWEEN)
        and VALUE is an unquoted string, integer or decimal
        Multiple VALUEs for an "in"-filter must be comma-separated and will be interpreted as a discunctive filter.
        The OPERATORs "lt", "gt" and "btw" are only applicable to numerical values.
        The OPERATOR "lk" is only applicable to string values and supports wildcards `*`(0 or more chars) and `?`(one char).
        The OPERATOR "btw" accepts two comma-separated values as the inclusive lower and upper bound. Missing values are assumed as 0 and 9999999 respectively.
        If no OPERATOR is specified, "eq" is assumed as the default OPERATOR.
        The filters are evaluated conjunctively.
        Note that applying more filters can slow down the query as more tables have to be considered in the evaluation.
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: tectonic setting - see /queries/sites/settings
        in: query
        name: setting
        type: string
      - description: location level 1 - see /queries/locations/l1
        in: query
        name: location1
        type: string
      - description: location level 2 - see /queries/locations/l2
        in: query
        name: location2
        type: string
      - description: location level 3 - see /queries/locations/l3
        in: query
        name: location3
        type: string
      - description: latitude
        in: query
        name: latitude
        type: string
      - description: longitude
        in: query
        name: longitude
        type: string
      - description: rock type - see /queries/samples/rocktypes
        in: query
        name: rocktype
        type: string
      - description: taxonomic classifier name - see /queries/samples/rockclasses
        in: query
        name: rockclass
        type: string
      - description: mineral - see /queries/samples/minerals
        in: query
        name: mineral
        type: string
      - description: material - see /queries/samples/materials
        in: query
        name: material
        type: string
      - description: inclusion type - see /queries/samples/inclusiontypes
        in: query
        name: inclusiontype
        type: string
      - description: sampling technique - see /queries/samples/samplingtechniques
        in: query
        name: sampletech
        type: string
      - description: chemical element - see /queries/samples/elements
        in: query
        name: element
        type: string
      - description: element type - see /queries/samples/elementtypes
        in: query
        name: elementtype
        type: string
      - description: measured value
        in: query
        name: value
        type: string
      - description: title of publication
        in: query
        name: title
        type: string
      - description: publication year
        in: query
        name: publicationyear
        type: string
      - description: DOI
        in: query
        name: doi
        type: string
      - description: Author first name
        in: query
        name: firstname
        type: string
      - description: Author last name
        in: query
        name: lastname
        type: string
      - description: Specimen age min
        in: query
        name: agemin
        type: string
      - description: Specimen age max
        in: query
        name: agemax
        type: string
      - description: Specimen geological age - see /queries/samples/geoages
        in: query
        name: geoage
        type: string
      - description: Specimen geological age prefix - see /queries/samples/geoageprefixes
        in: query
        name: geoageprefix
        type: string
      - description: Laboratory name - see /queries/samples/organizationnames
        in: query
        name: lab
        type: string
      - description: 'Coordinate-Polygon formatted as 2-dimensional json array: [[LONG,LAT],[2.4,6.3]]'
        in: query
        name: polygon
        type: string
      - description: 'BoundingBox formatted as 2-dimensional json array: [[SW_Long,SW_Lat],[SE_Long,SE_Lat],[NE_Long,NE_Lat],[NW_Long,NW_Lat]]'
        in: query
        name: bbox
        required: true
        type: string
      - description: Number of clusters for k-means clustering. Default is 7. Can
          be more depending on maxDistance
        in: query
        name: numClusters
        type: integer
      - description: 'Max size of cluster. Recommended values per zoom-level: Z0:
          50, Z1: 50, Z2: 25, Z4: 12 -> Zi = 50/i'
        in: query
        name: maxDistance
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ClusterResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve all samplingfeatureIDs filtered by a variety of fields and
        clustered
      tags:
      - geodata
  /geodata/sites:
    get:
      consumes:
      - application/json
      description: get site data in GeoJSON format
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GeoJSONFeatureCollection'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve site data as GeoJSON
      tags:
      - geodata
  /ping:
    get:
      consumes:
      - application/json
      description: Check connection to api
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Sample request
      tags:
      - general
  /queries/authors:
    get:
      consumes:
      - application/json
      description: get authors
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PeopleResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve authors
      tags:
      - people
  /queries/authors/{personID}:
    get:
      consumes:
      - application/json
      description: get authors by personID
      parameters:
      - description: Person ID
        in: path
        name: personID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.PeopleResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve authors by personID
      tags:
      - people
  /queries/citations:
    get:
      consumes:
      - application/json
      description: get citations
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CitationResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve citations
      tags:
      - citations
  /queries/citations/{citationID}:
    get:
      consumes:
      - application/json
      description: get citations by citationID
      parameters:
      - description: Citation ID
        in: path
        name: citationID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CitationResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve citations by citationID
      tags:
      - citations
  /queries/fulldata:
    get:
      consumes:
      - application/json
      description: get full datasets by a list of samplingfeatureids
      parameters:
      - description: List of Samplingfeature identifiers
        in: query
        name: samplingfeatureids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.FullDataResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve full datasets by a list of samplingfeatureids
      tags:
      - fulldata
  /queries/fulldata/{samplingfeatureid}:
    get:
      consumes:
      - application/json
      description: get full dataset by samplingfeatureid
      parameters:
      - description: Samplingfeature identifier
        in: path
        name: samplingfeatureids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.FullDataResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve full dataset by samplingfeatureid
      tags:
      - fulldata
  /queries/locations/l1:
    get:
      consumes:
      - application/json
      description: get top level locations
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LocationResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve locations of first level
      tags:
      - locations
  /queries/locations/l2:
    get:
      consumes:
      - application/json
      description: get second level locations
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: Locationname Level 1
        in: query
        name: locationl1
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LocationResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve locations of second level
      tags:
      - locations
  /queries/locations/l3:
    get:
      consumes:
      - application/json
      description: get third level locations
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: Locationname Level 1
        in: query
        name: locationl1
        required: true
        type: string
      - description: Locationname Level 2
        in: query
        name: locationl2
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LocationResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve locations of third level
      tags:
      - locations
  /queries/results/elements:
    get:
      consumes:
      - application/json
      description: get chemical elements
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ElementResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve chemical elements
      tags:
      - samples
  /queries/results/elementtypes:
    get:
      consumes:
      - application/json
      description: get chemical element types
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ElementTypeResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve chemical element types
      tags:
      - samples
  /queries/samples:
    get:
      consumes:
      - application/json
      description: |-
        Get all samplingfeatureIDs matching the current filters
        Filter DSL syntax:
        FIELD=OPERATOR:VALUE
        where FIELD is one of the accepted query params; OPERATOR is one of "lt" (<), "gt" (>), "eq" (=), "in" (IN), "lk" (LIKE), "btw" (BETWEEN)
        and VALUE is an unquoted string, integer or decimal
        Multiple VALUEs for an "in"-filter must be comma-separated and will be interpreted as a discunctive filter.
        The OPERATORs "lt", "gt" and "btw" are only applicable to numerical values.
        The OPERATOR "lk" is only applicable to string values and supports wildcards `*`(0 or more chars) and `?`(one char).
        The OPERATOR "btw" accepts two comma-separated values as the inclusive lower and upper bound. Missing values are assumed as 0 and 9999999 respectively.
        If no OPERATOR is specified, "eq" is assumed as the default OPERATOR.
        The filters are evaluated conjunctively.
        Note that applying more filters can slow down the query as more tables have to be considered in the evaluation.
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      - description: tectonic setting - see /queries/sites/settings
        in: query
        name: setting
        type: string
      - description: location level 1 - see /queries/locations/l1
        in: query
        name: location1
        type: string
      - description: location level 2 - see /queries/locations/l2
        in: query
        name: location2
        type: string
      - description: location level 3 - see /queries/locations/l3
        in: query
        name: location3
        type: string
      - description: latitude
        in: query
        name: latitude
        type: string
      - description: longitude
        in: query
        name: longitude
        type: string
      - description: rock type - see /queries/samples/rocktypes
        in: query
        name: rocktype
        type: string
      - description: taxonomic classifier name - see /queries/samples/rockclasses
        in: query
        name: rockclass
        type: string
      - description: mineral - see /queries/samples/minerals
        in: query
        name: mineral
        type: string
      - description: material - see /queries/samples/materials
        in: query
        name: material
        type: string
      - description: inclusion type - see /queries/samples/inclusiontypes
        in: query
        name: inclusiontype
        type: string
      - description: sampling technique - see /queries/samples/samplingtechniques
        in: query
        name: sampletech
        type: string
      - description: chemical element - see /queries/samples/elements
        in: query
        name: element
        type: string
      - description: element type - see /queries/samples/elementtypes
        in: query
        name: elementtype
        type: string
      - description: measured value
        in: query
        name: value
        type: string
      - description: title of publication
        in: query
        name: title
        type: string
      - description: publication year
        in: query
        name: publicationyear
        type: string
      - description: DOI
        in: query
        name: doi
        type: string
      - description: Author first name
        in: query
        name: firstname
        type: string
      - description: Author last name
        in: query
        name: lastname
        type: string
      - description: Specimen age min
        in: query
        name: agemin
        type: string
      - description: Specimen age max
        in: query
        name: agemax
        type: string
      - description: Specimen geological age - see /queries/samples/geoages
        in: query
        name: geoage
        type: string
      - description: Specimen geological age prefix - see /queries/samples/geoageprefixes
        in: query
        name: geoageprefix
        type: string
      - description: Laboratory name - see /queries/samples/organizationnames
        in: query
        name: lab
        type: string
      - description: 'Coordinate-Polygon formatted as 2-dimensional json array: [[LONG,LAT],[2.4,6.3]]'
        in: query
        name: polygon
        type: string
      - description: Add coordinates to each sample
        in: query
        name: addcoordinates
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SampleByFilterResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve all samplingfeatureIDs filtered by a variety of fields
      tags:
      - samples
  /queries/samples/{samplingfeatureID}:
    get:
      consumes:
      - application/json
      description: get sample by samplingfeatureid
      parameters:
      - description: Sample ID
        in: path
        name: samplingfeatureID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SampleResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve sample by samplingfeatureid
      tags:
      - samples
  /queries/samples/geoageprefixes:
    get:
      consumes:
      - application/json
      description: get geological age prefixes
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GeoAgePrefixResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve geological age prefixes
      tags:
      - samples
  /queries/samples/geoages:
    get:
      consumes:
      - application/json
      description: get geological ages
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GeoAgeResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve geological ages
      tags:
      - samples
  /queries/samples/inclusiontypes:
    get:
      consumes:
      - application/json
      description: get inclusion types
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.InclusionTypeResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve inclusion types
      tags:
      - samples
  /queries/samples/materials:
    get:
      consumes:
      - application/json
      description: get materials
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MaterialResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve materials
      tags:
      - samples
  /queries/samples/minerals:
    get:
      consumes:
      - application/json
      description: get minerals
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaxonomicClassifierResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve minerals
      tags:
      - samples
  /queries/samples/organizationnames:
    get:
      consumes:
      - application/json
      description: get organization names
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OrganizationResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve organization names
      tags:
      - samples
  /queries/samples/random:
    get:
      consumes:
      - application/json
      description: get random specimen
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.SpecimenResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve a random set of specimen
      tags:
      - samples
  /queries/samples/rockclasses:
    get:
      consumes:
      - application/json
      description: get rock classes
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaxonomicClassifierResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve rock classes
      tags:
      - samples
  /queries/samples/rocktypes:
    get:
      consumes:
      - application/json
      description: get rock types
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TaxonomicClassifierResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve rock types
      tags:
      - samples
  /queries/samples/samplingtechniques:
    get:
      consumes:
      - application/json
      description: get sampling techniques
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SamplingTechniqueResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve sampling techniques
      tags:
      - samples
  /queries/samples/specimentypes:
    get:
      consumes:
      - application/json
      description: get specimen types
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SpecimenResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve specimen types
      tags:
      - samples
  /queries/sites:
    get:
      consumes:
      - application/json
      description: Get all sites
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SiteResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "422":
          description: Unprocessable Entity
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve all sites
      tags:
      - sites
  /queries/sites/{samplingfeatureID}:
    get:
      consumes:
      - application/json
      description: Get sites by samplingfeatureID
      parameters:
      - description: samplingfeatureID
        in: path
        name: samplingfeatureID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SiteResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve sites by samplingfeatureID
      tags:
      - sites
  /queries/sites/settings:
    get:
      consumes:
      - application/json
      description: Get all geological settings
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SiteResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Retrieve all geological settings
      tags:
      - sites
schemes:
- https
- http
securityDefinitions:
  ApiKeyAuth:
    description: Accesskey based security scheme to secure api groups "/queries/*"
      and "/geodata/*"
    in: header
    name: DIGIS-API-ACCESSKEY
    type: apiKey
swagger: "2.0"
