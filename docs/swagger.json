{
    "schemes": [
        "https",
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the database api for the new GeoROC datamodel\n\nNote: Semicolon (;) in queries are not allowed and need to be url-encoded as per this issue: golang.org/issue/25192",
        "title": "DIGIS Database API",
        "contact": {
            "name": "DIGIS Project",
            "url": "https://www.uni-goettingen.de/de/643369.html",
            "email": "digis-info@uni-goettingen.de"
        },
        "license": {
            "name": "Data retrieved is licensed under CC BY-SA 4.0",
            "url": "https://creativecommons.org/licenses/by-sa/4.0/"
        },
        "version": "0.3.6"
    },
    "host": "api-test.georoc.eu",
    "basePath": "/api/v1",
    "paths": {
        "/geodata/samplesclustered": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all samplingfeatureIDs matching the current filters clustered\nFilter DSL syntax:\nFIELD=OPERATOR:VALUE\nwhere FIELD is one of the accepted query params; OPERATOR is one of \"lt\" (\u003c), \"gt\" (\u003e), \"eq\" (=), \"in\" (IN), \"lk\" (LIKE), \"btw\" (BETWEEN)\nand VALUE is an unquoted string, integer or decimal\nMultiple VALUEs for an \"in\"-filter must be comma-separated and will be interpreted as a discunctive filter.\nThe OPERATORs \"lt\", \"gt\" and \"btw\" are only applicable to numerical values.\nThe OPERATOR \"lk\" is only applicable to string values and supports wildcards `*`(0 or more chars) and `?`(one char).\nThe OPERATOR \"btw\" accepts two comma-separated values as the inclusive lower and upper bound. Missing values are assumed as 0 and 9999999 respectively.\nIf no OPERATOR is specified, \"eq\" is assumed as the default OPERATOR.\nThe filters are evaluated conjunctively.\nNote that applying more filters can slow down the query as more tables have to be considered in the evaluation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "geodata"
                ],
                "summary": "Retrieve all samplingfeatureIDs filtered by a variety of fields and clustered",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tectonic setting - see /queries/sites/settings",
                        "name": "setting",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "location level 1 - see /queries/locations/l1",
                        "name": "location1",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "location level 2 - see /queries/locations/l2",
                        "name": "location2",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "location level 3 - see /queries/locations/l3",
                        "name": "location3",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "latitude",
                        "name": "latitude",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "longitude",
                        "name": "longitude",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "rock type - see /queries/samples/rocktypes",
                        "name": "rocktype",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "taxonomic classifier name - see /queries/samples/rockclasses",
                        "name": "rockclass",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "mineral - see /queries/samples/minerals",
                        "name": "mineral",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "material - see /queries/samples/materials",
                        "name": "material",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "inclusion type - see /queries/samples/inclusiontypes",
                        "name": "inclusiontype",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "host material - see /queries/samples/hostmaterials",
                        "name": "hostmaterial",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "inclusion material - see /queries/samples/inclusionmaterials",
                        "name": "inclusionmaterial",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sampling technique - see /queries/samples/samplingtechniques",
                        "name": "sampletech",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "chemical filter using the form ",
                        "name": "chemistry",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "title of publication",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "publication year",
                        "name": "publicationyear",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "DOI",
                        "name": "doi",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Author first name",
                        "name": "firstname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Author last name",
                        "name": "lastname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Specimen age min",
                        "name": "agemin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Specimen age max",
                        "name": "agemax",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Specimen geological age - see /queries/samples/geoages",
                        "name": "geoage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Specimen geological age prefix - see /queries/samples/geoageprefixes",
                        "name": "geoageprefix",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Laboratory name - see /queries/samples/organizationnames",
                        "name": "lab",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coordinate-Polygon formatted as 2-dimensional json array: [[LONG,LAT],[2.4,6.3]]",
                        "name": "polygon",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "BoundingBox formatted as 2-dimensional json array: [[SW_Long,SW_Lat],[SE_Long,SE_Lat],[NE_Long,NE_Lat],[NW_Long,NW_Lat]]",
                        "name": "bbox",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of clusters for k-means clustering. Default is 7. Can be more depending on maxDistance",
                        "name": "numClusters",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Max size of cluster. Recommended values per zoom-level: Z0: 50, Z1: 50, Z2: 25, Z4: 12 -\u003e Zi = 50/i",
                        "name": "maxDistance",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ClusterResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/geodata/sites": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get site data in GeoJSON format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "geodata"
                ],
                "summary": "Retrieve site data as GeoJSON",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeoJSONFeatureCollection"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Check connection to api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "general"
                ],
                "summary": "Sample request",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/authors": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get authors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Retrieve authors",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PeopleResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/authors/{personID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get authors by personID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Retrieve authors by personID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Person ID",
                        "name": "personID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PeopleResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/citations": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get citations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "citations"
                ],
                "summary": "Retrieve citations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CitationResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/citations/{citationID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get citations by citationID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "citations"
                ],
                "summary": "Retrieve citations by citationID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Citation ID",
                        "name": "citationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CitationResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/fulldata": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get full datasets by a list of samplingfeatureids",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fulldata"
                ],
                "summary": "Retrieve full datasets by a list of samplingfeatureids",
                "parameters": [
                    {
                        "type": "string",
                        "description": "List of Samplingfeature identifiers",
                        "name": "samplingfeatureids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.FullDataResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/fulldata/{samplingfeatureid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get full dataset by samplingfeatureid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fulldata"
                ],
                "summary": "Retrieve full dataset by samplingfeatureid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Samplingfeature identifier",
                        "name": "samplingfeatureids",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.FullDataResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/locations/l1": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get top level locations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Retrieve locations of first level",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.LocationResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/locations/l2": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get second level locations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Retrieve locations of second level",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Locationname Level 1",
                        "name": "locationl1",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.LocationResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/locations/l3": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get third level locations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "locations"
                ],
                "summary": "Retrieve locations of third level",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Locationname Level 1",
                        "name": "locationl1",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Locationname Level 2",
                        "name": "locationl2",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.LocationResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/results/elements": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get chemical elements",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve chemical elements",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Element type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ElementResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/results/elementtypes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get chemical element types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve chemical element types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ElementTypeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/samples": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all samplingfeatureIDs matching the current filters\nFilter DSL syntax:\nFIELD=OPERATOR:VALUE\nwhere FIELD is one of the accepted query params; OPERATOR is one of \"lt\" (\u003c), \"gt\" (\u003e), \"eq\" (=), \"in\" (IN), \"lk\" (LIKE), \"btw\" (BETWEEN)\nand VALUE is an unquoted string, integer or decimal\nMultiple VALUEs for an \"in\"-filter must be comma-separated and will be interpreted as a discunctive filter.\nThe OPERATORs \"lt\", \"gt\" and \"btw\" are only applicable to numerical values.\nThe OPERATOR \"lk\" is only applicable to string values and supports wildcards `*`(0 or more chars) and `?`(one char).\nThe OPERATOR \"btw\" accepts two comma-separated values as the inclusive lower and upper bound. Missing values are assumed as 0 and 9999999 respectively.\nIf no OPERATOR is specified, \"eq\" is assumed as the default OPERATOR.\nThe filters are evaluated conjunctively.\nNote that applying more filters can slow down the query as more tables have to be considered in the evaluation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve all samplingfeatureIDs filtered by a variety of fields",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "tectonic setting - see /queries/sites/settings",
                        "name": "setting",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "location level 1 - see /queries/locations/l1",
                        "name": "location1",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "location level 2 - see /queries/locations/l2",
                        "name": "location2",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "location level 3 - see /queries/locations/l3",
                        "name": "location3",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "latitude",
                        "name": "latitude",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "longitude",
                        "name": "longitude",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "rock type - see /queries/samples/rocktypes",
                        "name": "rocktype",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "taxonomic classifier name - see /queries/samples/rockclasses",
                        "name": "rockclass",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "mineral - see /queries/samples/minerals",
                        "name": "mineral",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "material - see /queries/samples/materials",
                        "name": "material",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "inclusion type - see /queries/samples/inclusiontypes",
                        "name": "inclusiontype",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "host material - see /queries/samples/hostmaterials",
                        "name": "hostmaterial",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "inclusion material - see /queries/samples/inclusionmaterials",
                        "name": "inclusionmaterial",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sampling technique - see /queries/samples/samplingtechniques",
                        "name": "sampletech",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "chemical filter using the form ",
                        "name": "chemistry",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "title of publication",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "publication year",
                        "name": "publicationyear",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "DOI",
                        "name": "doi",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Author first name",
                        "name": "firstname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Author last name",
                        "name": "lastname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Specimen age min",
                        "name": "agemin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Specimen age max",
                        "name": "agemax",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Specimen geological age - see /queries/samples/geoages",
                        "name": "geoage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Specimen geological age prefix - see /queries/samples/geoageprefixes",
                        "name": "geoageprefix",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Laboratory name - see /queries/samples/organizationnames",
                        "name": "lab",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coordinate-Polygon formatted as 2-dimensional json array: [[LONG,LAT],[2.4,6.3]]",
                        "name": "polygon",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Add coordinates to each sample",
                        "name": "addcoordinates",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SampleByFilterResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/samples/geoageprefixes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get geological age prefixes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve geological age prefixes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeoAgePrefixResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/samples/geoages": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get geological ages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve geological ages",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GeoAgeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/samples/hostmaterials": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get host materials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve host materials",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TaxonomicClassifierResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/samples/inclusionmaterials": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get inclusion materials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve inclusion materials",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TaxonomicClassifierResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/samples/inclusiontypes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get inclusion types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve inclusion types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.InclusionTypeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/samples/materials": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get materials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve materials",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MaterialResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/samples/minerals": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get minerals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve minerals",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TaxonomicClassifierResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/samples/organizationnames": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get organization names",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve organization names",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.OrganizationResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/samples/random": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get random specimen",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve a random set of specimen",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SpecimenResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/samples/rockclasses": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get rock classes\nFilter DSL syntax:\nFIELD=OPERATOR:VALUE\nwhere FIELD is one of the accepted query params; OPERATOR is either \"in\" (IN) for rocktype; or \"lk\" (LIKE) for the search query q\nand VALUE is an unquoted string\nMultiple VALUEs for an \"in\"-filter must be comma-separated and will be interpreted as a discunctive filter.\nThe OPERATOR \"lk\" is only applicable to string values and supports wildcards `*`(0 or more chars) and `?`(one char).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve rock classes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "One or more Rocktypes to filter corresponding Rockclasses as a comma-separated list. Use ",
                        "name": "rocktype",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search string for rockclass values. Use ",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TaxonomicClassifierResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/samples/rocktypes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get rock types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve rock types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TaxonomicClassifierResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/samples/samplingtechniques": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get sampling techniques",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve sampling techniques",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SamplingTechniqueResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/samples/specimentypes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get specimen types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve specimen types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SpecimenResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/samples/{samplingfeatureID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get sample by samplingfeatureid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "samples"
                ],
                "summary": "Retrieve sample by samplingfeatureid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sample ID",
                        "name": "samplingfeatureID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SampleResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/sites": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all sites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sites"
                ],
                "summary": "Retrieve all sites",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SiteResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/sites/settings": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all geological settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sites"
                ],
                "summary": "Retrieve all geological settings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SiteResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/sites/{samplingfeatureID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get sites by samplingfeatureID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sites"
                ],
                "summary": "Retrieve sites by samplingfeatureID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "samplingfeatureID",
                        "name": "samplingfeatureID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SiteResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/queries/statistics": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get statistics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats"
                ],
                "summary": "Retrieve data statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Statistics"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Citation": {
            "type": "object",
            "properties": {
                "authors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Person"
                    }
                },
                "bookTitle": {
                    "type": "string"
                },
                "citationID": {
                    "type": "integer"
                },
                "citationLink": {
                    "type": "string"
                },
                "editors": {
                    "type": "string"
                },
                "firstPage": {
                    "type": "string"
                },
                "issue": {
                    "type": "string"
                },
                "journal": {
                    "type": "string"
                },
                "lastPage": {
                    "type": "string"
                },
                "publicationYear": {
                    "type": "integer"
                },
                "publisher": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "volume": {
                    "type": "string"
                }
            }
        },
        "model.CitationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Citation"
                    }
                },
                "numItems": {
                    "type": "integer"
                }
            }
        },
        "model.ClusterResponse": {
            "type": "object",
            "properties": {
                "bbox": {
                    "$ref": "#/definitions/model.GeoJSONFeature"
                },
                "clusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GeoJSONCluster"
                    }
                },
                "points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GeoJSONFeature"
                    }
                }
            }
        },
        "model.Element": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.ElementResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Element"
                    }
                },
                "numItems": {
                    "type": "integer"
                }
            }
        },
        "model.ElementType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.ElementTypeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ElementType"
                    }
                },
                "numItems": {
                    "type": "integer"
                }
            }
        },
        "model.FullData": {
            "type": "object",
            "properties": {
                "ageMax": {
                    "type": "integer"
                },
                "ageMin": {
                    "type": "integer"
                },
                "batches": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "comment": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "elevationMax": {
                    "type": "string"
                },
                "elevationMin": {
                    "type": "string"
                },
                "inclusionTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "institutions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "itemGroup": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "itemName": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "landOrSea": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "latitudeMax": {
                    "type": "string"
                },
                "latitudeMin": {
                    "type": "string"
                },
                "locationNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "locationNum": {
                    "type": "integer"
                },
                "locationTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "longitude": {
                    "type": "number"
                },
                "longitudeMax": {
                    "type": "string"
                },
                "longitudeMin": {
                    "type": "string"
                },
                "materials": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "method": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "minerals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "references": {
                    "type": "array",
                    "items": {}
                },
                "rockClasses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rockTextures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rockTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sampleName": {
                    "type": "string"
                },
                "sampleNum": {
                    "type": "integer"
                },
                "standardNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "standardValues": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "tectonicSetting": {
                    "type": "string"
                },
                "uniqueID": {
                    "type": "string"
                },
                "units": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            }
        },
        "model.FullDataResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.FullData"
                    }
                },
                "numItems": {
                    "type": "integer"
                }
            }
        },
        "model.GeoAge": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.GeoAgePrefix": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.GeoAgePrefixResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GeoAgePrefix"
                    }
                },
                "numItems": {
                    "type": "integer"
                }
            }
        },
        "model.GeoAgeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GeoAge"
                    }
                },
                "numItems": {
                    "type": "integer"
                }
            }
        },
        "model.GeoJSONCluster": {
            "type": "object",
            "properties": {
                "centroid": {
                    "$ref": "#/definitions/model.GeoJSONFeature"
                },
                "clusterID": {
                    "type": "integer"
                },
                "convexHull": {
                    "$ref": "#/definitions/model.GeoJSONFeature"
                }
            }
        },
        "model.GeoJSONFeature": {
            "type": "object",
            "properties": {
                "geometry": {
                    "$ref": "#/definitions/model.Geometry"
                },
                "id": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": true
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.GeoJSONFeatureCollection": {
            "type": "object",
            "properties": {
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.GeoJSONFeature"
                    }
                },
                "numberMatched": {
                    "type": "integer"
                },
                "numberReturned": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.Geometry": {
            "type": "object",
            "properties": {
                "coordinates": {
                    "type": "array",
                    "items": {}
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.InclusionType": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.InclusionTypeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.InclusionType"
                    }
                },
                "numItems": {
                    "type": "integer"
                }
            }
        },
        "model.Location": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.LocationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Location"
                    }
                },
                "numItems": {
                    "type": "integer"
                }
            }
        },
        "model.Material": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.MaterialResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Material"
                    }
                },
                "numItems": {
                    "type": "integer"
                }
            }
        },
        "model.Organization": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.OrganizationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Organization"
                    }
                },
                "numItems": {
                    "type": "integer"
                }
            }
        },
        "model.PeopleResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Person"
                    }
                },
                "numItems": {
                    "type": "integer"
                }
            }
        },
        "model.Person": {
            "type": "object",
            "properties": {
                "personFirstName": {
                    "type": "string"
                },
                "personID": {
                    "type": "integer"
                },
                "personLastName": {
                    "type": "string"
                }
            }
        },
        "model.Sample": {
            "type": "object",
            "properties": {
                "elevationDatumCV": {
                    "type": "string"
                },
                "elevationPrecision": {
                    "type": "number"
                },
                "elevationPrecisionComment": {
                    "type": "string"
                },
                "elevation_m": {
                    "type": "number"
                },
                "featureGeometryWKT": {
                    "type": "string"
                },
                "samplingFeatureDescription": {
                    "type": "string"
                },
                "samplingFeatureGeoTypeCV": {
                    "type": "string"
                },
                "samplingFeatureID": {
                    "type": "integer"
                },
                "samplingFeatureName": {
                    "type": "string"
                },
                "samplingFeatureUUID": {
                    "type": "string"
                }
            }
        },
        "model.SampleByFilterResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SampleByFiltersData"
                    }
                },
                "numItems": {
                    "type": "integer"
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "model.SampleByFiltersData": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "sampleID": {
                    "type": "integer"
                },
                "samplename": {
                    "type": "string"
                }
            }
        },
        "model.SampleResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Sample"
                    }
                },
                "numItems": {
                    "type": "integer"
                }
            }
        },
        "model.SamplingTechnique": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.SamplingTechniqueResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.SamplingTechnique"
                    }
                },
                "numItems": {
                    "type": "integer"
                }
            }
        },
        "model.Site": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "locationPrecision": {
                    "type": "number"
                },
                "locationPrecisionComment": {
                    "type": "string"
                },
                "longitude": {
                    "type": "number"
                },
                "samplingFeatureID": {
                    "type": "integer"
                },
                "setting": {
                    "type": "string"
                },
                "siteDescription": {
                    "type": "string"
                },
                "siteTypeCV": {
                    "type": "string"
                },
                "spatialReferenceID": {
                    "type": "integer"
                }
            }
        },
        "model.SiteResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Site"
                    }
                },
                "numItems": {
                    "type": "integer"
                }
            }
        },
        "model.Specimen": {
            "type": "object",
            "properties": {
                "isFieldSpecimen": {
                    "type": "boolean"
                },
                "samplingFeatureID": {
                    "type": "integer"
                },
                "specimenMediumCV": {
                    "type": "string"
                },
                "specimenTypeCV": {
                    "type": "string"
                }
            }
        },
        "model.SpecimenResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Specimen"
                    }
                },
                "numItems": {
                    "type": "integer"
                }
            }
        },
        "model.Statistics": {
            "type": "object",
            "properties": {
                "numAnalyses": {
                    "type": "integer"
                },
                "numCitations": {
                    "type": "integer"
                },
                "numResults": {
                    "type": "integer"
                },
                "numSamples": {
                    "type": "integer"
                }
            }
        },
        "model.TaxonomicClassifier": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.TaxonomicClassifierResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TaxonomicClassifier"
                    }
                },
                "numItems": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Accesskey based security scheme to secure api groups \"/queries/*\" and \"/geodata/*\"",
            "type": "apiKey",
            "name": "DIGIS-API-ACCESSKEY",
            "in": "header"
        }
    }
}